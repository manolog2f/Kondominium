@model Kondominium_Entities.ClienteDocsEntity

@{
    Layout = "";
}



@using (Ajax.BeginForm("_EditClientesFileUploadPost", "Clientes", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "partsQuoUpd", LoadingElementId = "loading" }, new { @id = "frmPartialInvo", enctype = "multipart/form-data" }))
{

        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ClienteDocsEntity</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ClienteId, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClienteId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.DocumentType, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @{ 


                    @Html.DropDownListFor(model => model.DocumentType,
                                                     new Kondominium.Controllers.ClientesController().ListTipoDocumentoEnum().Select(x => new SelectListItem
                                                     {
                                                         Text = x.ToString()
                                                                    ,
                                                         Value = x.ToString()
                                                     }),
                                                                    "Seleccione el tipo de Documento",
                                                                                   new { @class = "form-control" })
                        }

                    @Html.ValidationMessageFor(model => model.DocumentType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UrlDocument, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UrlDocument, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UrlDocument, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}


